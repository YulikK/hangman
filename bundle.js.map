{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrBoD;AACc;AAC3B;AACI;AACJ;AACQ;AACD;;AAE/B;AACf;AACA;AACA,8BAA8B,qDAAQ;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA,gCAAgC,uDAAU;AAC1C,8BAA8B,qDAAQ;AACtC,kCAAkC,yDAAY;AAC9C;AACA;;AAEA;AACA,IAAI,wDAAM;AACV;;AAEA;AACA,IAAI,wDAAM;AACV,IAAI,wDAAM;AACV,IAAI,wDAAM;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,8DAAiB;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,8DAAiB;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,yDAAW;AAC5C;AACA,2BAA2B,8DAAiB;AAC5C;;AAEA,IAAI,wDAAM;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,wDAAM;AACV;;AAEA;AACA,IAAI,wDAAM;AACV,IAAI,wDAAM;AACV;AACA,IAAI,wDAAM;AACV;;AAEA;AACA;AACA,SAAS,uDAAU,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAU,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChJO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACO,sBAAsB,aAAa,GAAG,UAAU;;;;;;;;;;;;;;;;;;;ACRZ;;AAEpC;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;;AAEA,6BAA6B,yDAAQ;AACrC;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;AC1Fe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChByC;AACa;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD,OAAO,YAAY,SAAS;AAClF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sBAAsB,oDAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kEAAgB;AAC7B,WAAW,kEAAgB;AAC3B,aAAa,kEAAgB;AAC7B,mBAAmB,kEAAgB;AACnC;AACA;AACA,gBAAgB,kEAAgB;AAChC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9FyC;AACa;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,oDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kEAAgB;AACnC,iBAAiB,kEAAgB;AACjC,qBAAqB,kEAAgB;AACrC,mBAAmB,kEAAgB;AACnC;AACA;AACA,mBAAmB,kEAAgB;AACnC,uBAAuB,kEAAgB;AACvC,qBAAqB,kEAAgB;AACrC,oBAAoB,kEAAgB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;AC5HyC;AACI;AACS;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,qDAAQ;AACZ;AACA,uCAAuC,MAAM;AAC7C;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,eAAe,kEAAgB;AAC/B,aAAa,kEAAgB;AAC7B,WAAW,kEAAgB;AAC3B;;AAEA,IAAI,qDAAQ;AACZ,sBAAsB,MAAM,KAAK,kEAAgB;AACjD;AACA,2BAA2B,OAAO,KAAK,kEAAgB;AACvD;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,sBAAsB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1HyC;AACa;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,oDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,YAAY,kEAAgB;AAC5B,eAAe,kEAAgB;AAC/B,aAAa,kEAAgB;AAC7B,WAAW,kEAAgB;AAC3B;AACA;AACA;;;;;;;;;;;;;;;;;;AC9DyC;AACa;AACA;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,sCAAsC;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,aAAa,GAAG,8DAAiB,CAAC;AACtD;AACA;;AAEe,qBAAqB,oDAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAgB;AACrC,mBAAmB,kEAAgB;AACnC,kBAAkB,kEAAgB;AAClC,mBAAmB,kEAAgB;AACnC,sBAAsB,kEAAgB;AACtC;AACA;AACA,mBAAmB,kEAAgB;AACnC,qBAAqB,kEAAgB;AACrC,2BAA2B,kEAAgB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E,wDAAwD,mBAAmB,GAAG,8DAAiB,CAAC;AAChG;AACA;;;;;;;;;;;;;;;;;UCvIA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACN2B;AACmB;AACG;AACK;;AAEtD;;AAEA;AACA,4BAA4B,2DAAa;;AAEzC;AACA;AACA;AACA;;AAEA,WAAW,iDAAQ;;AAEnB,+BAA+B,6DAAgB;AAC/C;AACA","sources":["webpack://hangman/./src/scss/main.scss","webpack://hangman/./src/js/model/questions.js","webpack://hangman/./src/js/presenter/hangman.js","webpack://hangman/./src/js/utils/const.js","webpack://hangman/./src/js/utils/render.js","webpack://hangman/./src/js/view/abstract.js","webpack://hangman/./src/js/view/end-game.js","webpack://hangman/./src/js/view/game.js","webpack://hangman/./src/js/view/keyboard.js","webpack://hangman/./src/js/view/main.js","webpack://hangman/./src/js/view/result.js","webpack://hangman/webpack/bootstrap","webpack://hangman/webpack/runtime/define property getters","webpack://hangman/webpack/runtime/hasOwnProperty shorthand","webpack://hangman/webpack/runtime/make namespace object","webpack://hangman/./src/js/app.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export default class Questions {\n  constructor() {\n    this._questions = [];\n  }\n\n  setQuestions(questions) {\n    this._questions = questions.slice();\n  }\n\n  getQuestions() {\n    return this._questions;\n  }\n\n  adaptToClient(question) {\n    const adaptedQuestion = Object.assign({}, question, {\n      id: question.id,\n      text: question.text,\n      answer: question.answer,\n    });\n    return adaptedQuestion;\n  }\n}\n","import { render, remove } from \"../utils/render.js\";\nimport { MAX_MISTAKE_COUNT, STORE_NAME } from \"../utils/const.js\";\nimport MainView from \"../view/main.js\";\nimport ResultView from \"../view/result.js\";\nimport GameView from \"../view/game.js\";\nimport KeyboardView from \"../view/keyboard.js\";\nimport EndGameView from \"../view/end-game.js\";\n\nexport default class Hangman {\n  constructor(gameContainer) {\n    this._gameContainer = gameContainer;\n    this._mainComponent = new MainView();\n    this._isGameStarted = false;\n  }\n\n  init(questions) {\n    this._questions = questions;\n    console.log(\n      \"Ответы в игре только на английском, при вводе с клавиатуры, просьба убедиться что включена верная раскладка. Приятной игры :)\",\n    );\n    this._getStorage();\n    this._renderBase();\n    this._startNewGame();\n  }\n\n  _startNewGame() {\n    this._isGameStarted = true;\n    this._mistakeCount = 0;\n    this._foundLetters = [];\n    this._currentQuestion = this._getRandomQuestion();\n    console.log(`Answer: ${this._currentQuestion.answer}`);\n    this._setStorage();\n    this._resultComponent = new ResultView(this._mistakeCount);\n    this._gameComponent = new GameView(this._currentQuestion);\n    this._keyboardComponent = new KeyboardView();\n    this._renderGame();\n  }\n\n  _renderBase() {\n    render(this._gameContainer, this._mainComponent);\n  }\n\n  _renderGame() {\n    render(this._mainComponent._elements.div, this._gameComponent);\n    render(this._mainComponent._elements.div, this._resultComponent);\n    render(this._gameComponent, this._keyboardComponent);\n\n    const onKeyClick = (letter) => {\n      this._setNextGameStep(letter);\n    };\n\n    this._keyboardComponent.setKeyClickHandler(onKeyClick);\n  }\n\n  _setNextGameStep(letter) {\n    if (this._isGameStarted) {\n      if (this._currentQuestion.answer.includes(letter.toLowerCase()))\n        this._setNewLetter(letter);\n      else if (this._mistakeCount < MAX_MISTAKE_COUNT) this._setNewMistake();\n    }\n  }\n\n  _setNewLetter(letter) {\n    this._gameComponent.setLetter(letter);\n    this._foundLetters.push(letter.toLowerCase());\n    if (this._isFinish()) this._showEndGameInformation();\n  }\n\n  _setNewMistake() {\n    this._mistakeCount += 1;\n    this._resultComponent.updateMistake(this._mistakeCount);\n    if (this._mistakeCount === MAX_MISTAKE_COUNT)\n      this._showEndGameInformation();\n  }\n\n  _getRandomQuestion() {\n    let newQuestion = this._getNextQuestion();\n    while (this._currentQuestion === newQuestion) {\n      newQuestion = this._getNextQuestion();\n    }\n    return newQuestion;\n  }\n\n  _getNextQuestion() {\n    return this._questions[Math.floor(Math.random() * this._questions.length)];\n  }\n\n  _isFinish() {\n    const answerLetters = this._currentQuestion.answer\n      .split(\"\")\n      .filter((el) => !this._foundLetters.includes(el));\n    return answerLetters.length === 0;\n  }\n\n  _showEndGameInformation() {\n    this._isGameStarted = false;\n    this._keyboardComponent.deleteKeyClickHandler();\n    this._endGameComponent = new EndGameView(\n      this._currentQuestion,\n      this._mistakeCount < MAX_MISTAKE_COUNT,\n    );\n\n    render(this._gameContainer, this._endGameComponent);\n\n    const onPlayAgainClick = () => {\n      this._restartGame();\n    };\n\n    this._endGameComponent.setPlayAgainClickHandler(onPlayAgainClick);\n  }\n\n  _restartGame() {\n    this._destroyResultModal();\n    this._destroyGameResult();\n    this._startNewGame();\n  }\n\n  _destroyResultModal() {\n    remove(this._endGameComponent);\n  }\n\n  _destroyGameResult() {\n    remove(this._resultComponent);\n    remove(this._gameComponent);\n    // this._keyboardComponent.deleteKeyClickHandler();\n    remove(this._keyboardComponent);\n  }\n\n  _setStorage() {\n    window.localStorage.setItem(\n      `${STORE_NAME}-currentQuestionId`,\n      this._currentQuestion.id,\n    );\n  }\n  _getStorage() {\n    const questionId = window.localStorage.getItem(\n      `${STORE_NAME}-currentQuestionId`,\n    );\n    if (questionId) {\n      this._currentQuestion = this._questions.filter(\n        (el) => el.id === questionId,\n      )[0];\n    }\n  }\n}\n","export const MAX_MISTAKE_COUNT = 6;\nexport const KEYBOARD = [\n  [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n  [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n];\nconst STORE_PREFIX = `hangman`;\nconst STORE_VER = `v1`;\nexport const STORE_NAME = `${STORE_PREFIX}-${STORE_VER}`;\n","import Abstract from \"../view/abstract.js\";\n\nexport const render = (container, child) => {\n  const containerEl = getElement(container);\n  const childEl = getElement(child);\n\n  containerEl.append(childEl);\n\n  renderChild(childEl, getChild(child, childEl));\n};\n\nconst renderChild = (container, childList) => {\n  if (childList) {\n    childList.forEach((childItem) => {\n      if (Array.isArray(childItem.element)) {\n        childItem.element.forEach((el) => render(container, el));\n      } else render(container, childItem);\n    });\n  }\n};\n\nconst getElement = (container) => {\n  let element = container;\n  if (element._structure) element = element._structure;\n  while (element.element) {\n    element = element.element;\n  }\n  return element;\n};\n\nconst getChild = (node, element) => {\n  let currentNode = node._structure ? node._structure : node.element;\n  // let child = node.child ? node.child.element : undefined;\n  let child = node.child ? node.child : undefined;\n  if (!child && currentNode) {\n    while (currentNode.child) {\n      if (currentNode.element === element) {\n        child = currentNode.child;\n        break;\n      }\n      currentNode = currentNode.child;\n    }\n  }\n  return child;\n};\n\n// const renderChild = (container, child) => {\n//   child.forEach((childrenObj) => {\n//     if (Array.isArray(childrenObj._element)) {\n//       childrenObj._element.forEach((childElement) =>\n//         renderElementWhitChild(container, childElement, childrenObj._elementChildren),\n//       );\n//     } else renderElementWhitChild(container, childrenObj._element, childrenObj._elementChildren);\n//   });\n// };\n\n// const renderElementWhitChild = (container, element, child) => {\n//   render(container, element);\n//   if (child) {\n//     renderChild(element, child);\n//   }\n// };\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const createDomElement = (properties) => {\n  const newElement = Object.assign(\n    document.createElement(properties.tag),\n    properties,\n  );\n\n  return newElement;\n};\n\nexport const remove = (component) => {\n  if (component === null) {\n    return;\n  }\n\n  if (!(component instanceof Abstract)) {\n    throw new Error(`Can remove only components`);\n  }\n\n  component.getElement().remove();\n  component.removeElement();\n};\n","export default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstract, only concrete one.`);\n    }\n    this._structure = null;\n    this._callback = {};\n  }\n\n  getElement() {\n    return this._structure[\"element\"];\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport { createDomElement } from \"../utils/render.js\";\n\nconst getPropertiesAsideTemplate = () => {\n  return {\n    tag: \"aside\",\n    className: \"modal-results\",\n  };\n};\n\nconst getPropertiesDiveTemplate = () => {\n  return {\n    tag: \"div\",\n    className: \"modal-results__wrapper\",\n  };\n};\n\nconst getPropertiesTitleTemplate = (isWin) => {\n  return {\n    tag: \"h2\",\n    className: \"modal-results__title\",\n    textContent: `${isWin ? \"Uh, congratulations!\" : \"Ups...\"}`,\n  };\n};\n\nconst getPropertiesInformationTemplate = (answer, question) => {\n  return {\n    tag: \"p\",\n    className: \"modal-results__information\",\n    innerHTML: `<span class=\"modal-results__answer\">${answer}</span> - ${question}`,\n  };\n};\n\nconst getPropertiesButtonTemplate = () => {\n  return {\n    tag: \"a\",\n    className: \"modal-results__button\",\n    textContent: \"Play again\",\n  };\n};\n\nexport default class EndGame extends AbstractView {\n  constructor(question, isWin) {\n    super();\n    this._isWin = isWin;\n    this._question = question.text;\n    this._answer = question.answer;\n    this._elements = this.generateNode();\n    this._structure = {\n      element: this._elements.aside,\n      child: [\n        {\n          element: this._elements.div,\n          child: [\n            {\n              element: this._elements.title,\n            },\n            {\n              element: this._elements.information,\n            },\n            {\n              element: this._elements.closeBtn,\n            },\n          ],\n        },\n      ],\n    };\n    this._playAgainClickHandler = this._playAgainClickHandler.bind(this);\n  }\n\n  generateNode() {\n    return {\n      aside: createDomElement(getPropertiesAsideTemplate()),\n      div: createDomElement(getPropertiesDiveTemplate()),\n      title: createDomElement(getPropertiesTitleTemplate(this._isWin)),\n      information: createDomElement(\n        getPropertiesInformationTemplate(this._answer, this._question),\n      ),\n      closeBtn: createDomElement(getPropertiesButtonTemplate()),\n    };\n  }\n\n  _playAgainClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.playAgainClick();\n  }\n\n  setPlayAgainClickHandler(callback) {\n    this._callback.playAgainClick = callback;\n    this._elements.closeBtn.addEventListener(\n      `click`,\n      this._playAgainClickHandler,\n    );\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport { createDomElement } from \"../utils/render.js\";\n\nconst getPropertiesGameSectionTemplate = () => {\n  return {\n    tag: \"section\",\n    className: \"hangman__game game\",\n  };\n};\n\nconst getPropertiesGameTitleTemplate = () => {\n  return {\n    tag: \"h2\",\n    className: \"game__title visually-hidden\",\n    textContent: \"Game desk\",\n  };\n};\n\nconst getPropertiesAnswerSectionTemplate = () => {\n  return {\n    tag: \"section\",\n    className: \"game__answer\",\n  };\n};\n\nconst getPropertiesAnswerTitleTemplate = () => {\n  return {\n    tag: \"h3\",\n    className: \"game__answer-title visually-hidden\",\n    textContent: \"Answer\",\n  };\n};\n\nconst getPropertiesAnswerLetterTemplate = () => {\n  return {\n    tag: \"p\",\n    className: \"game__answer-letter\",\n  };\n};\n\nconst getPropertiesQuestionSectionTemplate = () => {\n  return {\n    tag: \"section\",\n    className: \"game__question\",\n  };\n};\nconst getPropertiesQuestionTitleTemplate = () => {\n  return {\n    tag: \"h3\",\n    className: \"game__question-title visually-hidden\",\n    textContent: \"Question\",\n  };\n};\nconst getPropertiesQuestionTextTemplate = (question) => {\n  return {\n    tag: \"p\",\n    className: \"game__question-text\",\n    textContent: question,\n  };\n};\n\nexport default class Game extends AbstractView {\n  constructor(question) {\n    super();\n    this._answer = question.answer;\n    this._question = question.text;\n    this._elements = this.generateNode();\n    this._structure = {\n      element: this._elements.gameSection,\n      child: [\n        {\n          element: this._elements.gameTitle,\n        },\n        {\n          element: this._elements.answerSection,\n          child: [\n            {\n              element: this._elements.answerTitle,\n            },\n            {\n              element: this._elements.answerLetters,\n            },\n          ],\n        },\n        {\n          element: this._elements.questionSection,\n          child: [\n            {\n              element: this._elements.questionTitle,\n            },\n            {\n              element: this._elements.questionText,\n            },\n          ],\n        },\n      ],\n    };\n  }\n\n  generateNode() {\n    return {\n      gameSection: createDomElement(getPropertiesGameSectionTemplate()),\n      gameTitle: createDomElement(getPropertiesGameTitleTemplate()),\n      answerSection: createDomElement(getPropertiesAnswerSectionTemplate()),\n      answerTitle: createDomElement(getPropertiesAnswerTitleTemplate()),\n      answerLetters: this._answer\n        .split(\"\")\n        .map(() => createDomElement(getPropertiesAnswerLetterTemplate())),\n      questionSection: createDomElement(getPropertiesQuestionSectionTemplate()),\n      questionTitle: createDomElement(getPropertiesQuestionTitleTemplate()),\n      questionText: createDomElement(\n        getPropertiesQuestionTextTemplate(this._question),\n      ),\n    };\n  }\n\n  setLetter(letter) {\n    const letterElement = this._elements.answerLetters;\n    this._answer.split(\"\").forEach((answerLetter, index) => {\n      if (answerLetter.toLowerCase() === letter.toLowerCase()) {\n        letterElement[index].innerText = letter.toLowerCase();\n      }\n    });\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport { KEYBOARD } from \"../utils/const.js\";\nimport { createDomElement } from \"../utils/render.js\";\n\nconst getPropertiesTemplate = () => {\n  return {\n    tag: \"section\",\n    className: \"game__keyboard keyboard\",\n  };\n};\n\nconst getPropertiesTitleTemplate = () => {\n  return {\n    tag: \"h3\",\n    className: \"keyboard__title visually-hidden\",\n    textContent: \"Keyboard\",\n  };\n};\n\nconst getPropertiesRowTemplate = () => {\n  return {\n    tag: \"div\",\n    className: \"keyboard__row\",\n  };\n};\n\nconst getPropertiesLetterTemplate = (letter) => {\n  return {\n    tag: \"p\",\n    className: \"keyboard__letter keyboard__letter--active\",\n    textContent: letter.toUpperCase(),\n    data: letter,\n  };\n};\n\nexport default class Keyboard extends AbstractView {\n  constructor() {\n    super();\n    this._elements = this.generateNode();\n    this._structure = {\n      element: this._elements.section,\n      child: [\n        {\n          element: this._elements.title,\n        },\n      ],\n    };\n    KEYBOARD.forEach((row, index) => {\n      this._structure[\"child\"].push({\n        element: this._elements[`row_${index}`],\n        child: this.getLettersArray(row),\n      });\n    });\n\n    this._keyClickHandler = this._keyClickHandler.bind(this);\n    this._keyDownHandler = this._keyDownHandler.bind(this);\n  }\n\n  generateNode() {\n    const nodeList = {\n      section: createDomElement(getPropertiesTemplate()),\n      title: createDomElement(getPropertiesTitleTemplate()),\n      row: createDomElement(getPropertiesRowTemplate()),\n    };\n\n    KEYBOARD.forEach((row, index) => {\n      nodeList[`row_${index}`] = createDomElement(getPropertiesRowTemplate());\n      row.forEach((letter) => {\n        nodeList[`letter_${letter}`] = createDomElement(\n          getPropertiesLetterTemplate(letter),\n        );\n      });\n    });\n\n    return nodeList;\n  }\n\n  getLettersArray(row) {\n    const letterArr = row.map((letter) => {\n      const letterObj = new Object();\n      letterObj.element = this._elements[`letter_${letter}`];\n      return letterObj;\n    });\n    return letterArr;\n  }\n\n  _keyClickHandler(evt) {\n    if (!evt.target.classList.contains(\"keyboard__letter\")) {\n      return;\n    }\n    if (evt.target.classList.contains(\"keyboard__letter--active\")) {\n      evt.target.classList.remove(\"keyboard__letter--active\");\n      evt.target.classList.add(\"keyboard__letter--inactive\");\n      evt.preventDefault();\n      this._callback.keyboardClick(evt.target.data);\n    }\n  }\n\n  _keyDownHandler(evt) {\n    if (evt.key) {\n      const keyElement = this._elements[`letter_${evt.key.toLowerCase()}`];\n      if (keyElement) {\n        if (keyElement.classList.contains(\"keyboard__letter--active\")) {\n          keyElement.classList.remove(\"keyboard__letter--active\");\n          keyElement.classList.add(\"keyboard__letter--inactive\");\n          evt.preventDefault();\n          this._callback.keyboardClick(evt.key.toUpperCase());\n        }\n      }\n    }\n  }\n\n  setKeyClickHandler(callback) {\n    this._callback.keyboardClick = callback;\n    this.getElement().addEventListener(`click`, this._keyClickHandler);\n    document.addEventListener(`keydown`, this._keyDownHandler);\n  }\n\n  deleteKeyClickHandler() {\n    this.getElement().removeEventListener(`click`, this._keyClickHandler);\n    document.removeEventListener(`keydown`, this._keyDownHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport { createDomElement } from \"../utils/render.js\";\n\nconst getPropertiesTemplate = () => {\n  return {\n    tag: \"main\",\n    className: \"hangman\",\n  };\n};\n\nconst getPropertiesArticleTemplate = () => {\n  return {\n    tag: \"article\",\n    className: \"hangman__wrapper\",\n  };\n};\n\nconst getPropertiesTitleTemplate = () => {\n  return {\n    tag: \"h1\",\n    className: \"hangman__title\",\n    textContent: \"Hangman\",\n  };\n};\n\nconst getPropertiesDivTemplate = () => {\n  return {\n    tag: \"div\",\n    className: \"hangman__game-wrapper\",\n  };\n};\n\nexport default class Main extends AbstractView {\n  constructor() {\n    super();\n    this._elements = this.generateNode();\n    this._structure = {\n      element: this._elements.main,\n      child: [\n        {\n          element: this._elements.article,\n          child: [\n            {\n              element: this._elements.title,\n            },\n            {\n              element: this._elements.div,\n            },\n          ],\n        },\n      ],\n    };\n  }\n\n  generateNode() {\n    return {\n      main: createDomElement(getPropertiesTemplate()),\n      article: createDomElement(getPropertiesArticleTemplate()),\n      title: createDomElement(getPropertiesTitleTemplate()),\n      div: createDomElement(getPropertiesDivTemplate()),\n    };\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport { MAX_MISTAKE_COUNT } from \"../utils/const.js\";\nimport { createDomElement } from \"../utils/render.js\";\n\nconst getPropertiesResultSectionTemplate = () => {\n  return {\n    tag: \"section\",\n    className: \"hangman__result result\",\n  };\n};\n\nconst getPropertiesResultTitleTemplate = () => {\n  return {\n    tag: \"h3\",\n    className: \"result__title visually-hidden\",\n    textContent: \"Game result\",\n  };\n};\n\nconst getPropertiesGallowsSectionTemplate = () => {\n  return {\n    tag: \"div\",\n    className: \"result__gallows\",\n  };\n};\n\nconst getPropertiesGallowsTreeTemplate = () => {\n  return {\n    tag: \"img\",\n    className: \"result__gallows-tree\",\n    src: \"img/tree.png\",\n    alt: \"allows\",\n    width: \"514\",\n    height: \"572\",\n  };\n};\n\nconst getPropertiesGallowsMistakeTemplate = (mistakeCount) => {\n  return {\n    tag: \"img\",\n    className: \"result__gallows-mistake visually-hidden\",\n    src: `img/mistake-${mistakeCount === 0 ? 1 : mistakeCount}.png`,\n    alt: \"mistake\",\n    width: \"514\",\n    height: \"572\",\n  };\n};\n\nconst getPropertiesAttemptsDivTemplate = () => {\n  return {\n    tag: \"div\",\n    className: \"result__attempts\",\n  };\n};\n\nconst getPropertiesAttemptsHeartTemplate = () => {\n  return {\n    tag: \"img\",\n    className: \"result__heart\",\n    src: \"img/heart.png\",\n    alt: \"\",\n    width: \"61\",\n    height: \"66\",\n  };\n};\n\nconst getPropertiesAttemptsInformationTemplate = (mistakeCount) => {\n  return {\n    tag: \"p\",\n    className: \"result__attempts-information\",\n    textContent: `${mistakeCount}/${MAX_MISTAKE_COUNT}`,\n  };\n};\n\nexport default class Result extends AbstractView {\n  constructor(mistakeCount) {\n    super();\n    this._mistakeCount = mistakeCount;\n    this._elements = this.generateNode();\n    this._structure = {\n      element: this._elements.resultSection,\n      child: [\n        {\n          element: this._elements.resultTitle,\n        },\n        {\n          element: this._elements.gallowsDiv,\n          child: [\n            {\n              element: this._elements.gallowsTree,\n            },\n            {\n              element: this._elements.gallowsMistake,\n            },\n          ],\n        },\n        {\n          element: this._elements.attemptsDiv,\n          child: [\n            {\n              element: this._elements.attemptsHeart,\n            },\n            {\n              element: this._elements.attemptsInformation,\n            },\n          ],\n        },\n      ],\n    };\n  }\n  generateNode() {\n    return {\n      resultSection: createDomElement(getPropertiesResultSectionTemplate()),\n      resultTitle: createDomElement(getPropertiesResultTitleTemplate()),\n      gallowsDiv: createDomElement(getPropertiesGallowsSectionTemplate()),\n      gallowsTree: createDomElement(getPropertiesGallowsTreeTemplate()),\n      gallowsMistake: createDomElement(\n        getPropertiesGallowsMistakeTemplate(this._mistakeCount),\n      ),\n      attemptsDiv: createDomElement(getPropertiesAttemptsDivTemplate()),\n      attemptsHeart: createDomElement(getPropertiesAttemptsHeartTemplate()),\n      attemptsInformation: createDomElement(\n        getPropertiesAttemptsInformationTemplate(this._mistakeCount),\n      ),\n    };\n  }\n\n  updateMistake(mistakeCount) {\n    this._mistakeCount = mistakeCount;\n    if (this._mistakeCount === 1) {\n      this._elements.gallowsMistake.classList.remove(\"visually-hidden\");\n    }\n    this._elements.gallowsMistake.src = `img/mistake-${this._mistakeCount}.png`;\n    this._elements.attemptsInformation.textContent = `${this._mistakeCount}/${MAX_MISTAKE_COUNT}`;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../scss/main.scss\";\nimport mockFile from \"../mock/questions.json\";\nimport QuestionModel from \"./model/questions.js\";\nimport HangmanPresenter from \"./presenter/hangman.js\";\n\nconst siteBodyElement = document.querySelector(`body`);\n\nif (siteBodyElement !== null) {\n  const questionModel = new QuestionModel();\n\n  const initData = (data) => {\n    const questions = data.map(questionModel.adaptToClient);\n    questionModel.setQuestions(questions);\n  };\n\n  initData(mockFile);\n\n  const hangmanPresenter = new HangmanPresenter(siteBodyElement);\n  hangmanPresenter.init(questionModel.getQuestions());\n}\n"],"names":[],"sourceRoot":""}